version: "3"
services:
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "${KAFDROP_PORT}:${KAFDROP_PORT}"
    environment:
      KAFKA_BROKERCONNECT: ${KAFKA_BROKERCONNECT}
    depends_on:
      - "kafka"

  kafka:
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"
      - "${KAFKA_PORT_EXTERNAL}:${KAFKA_PORT_EXTERNAL}"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:${KAFKA_PORT_INTERNAL},EXTERNAL://:${KAFKA_PORT_EXTERNAL}"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://${KAFKA_ADVERTISED_LISTENERS_INTERNAL},EXTERNAL://${KAFKA_ADVERTISED_LISTENERS_EXTERNAL}"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: ${KAFKA_RESTART_ATTEMPTS}
      KAFKA_RESTART_DELAY: ${KAFKA_RESTART_DELAY}
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: ${ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL}

  db:
    image: postgres:13
    container_name: postgres_db
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}